### Créer un parcel
POST http://localhost:8000/api/parcels/
Accept: application/json
Content-Type: application/json

{
  "owner":"6707a04b-3641-4245-a26b-9d001bafc29f" ,
  "parcel_name": "Champ test",
  "parcel_points": [
    {"latitude": -18.879, "longitude": 47.507, "order": 1},
    {"latitude": -18.880, "longitude": 47.508, "order": 2},
    {"latitude": -18.881, "longitude": 47.507, "order": 3}
  ]
}

### 1. Récupérer tous les utilisateurs
GET http://127.0.0.1:8000/api/users/
Content-Type: application/json


### 2. Créer un nouvel utilisateur
POST http://127.0.0.1:8000/api/users/
Content-Type: application/json

{
  "username": "jean",
  "email": "jean@example.com",
  "first_name": "jean",
  "last_name": "De Dieu",
  "password": "test1234"
}


### 3. Récupérer un utilisateur par UUID
GET http://127.0.0.1:8000/api/users/{{uuid}}
Content-Type: application/json


### 4. Mettre à jour un utilisateur (remplace {{uuid}})
PUT http://127.0.0.1:8000/api/users/6707a04b-3641-4245-a26b-9d001bafc29f/
Content-Type: application/json

{
  "username": "jeanDeDieu",
  "email": "jean@example.com",
  "first_name": "jean",
  "last_name": "De Dieu",
  "password":"test1234"
}


### 5. Supprimer un utilisateur (remplace {{uuid}})
DELETE http://127.0.0.1:8000/api/users/{{uuid}}/

### 6. Sign up
POST http://localhost:8000/api/signup/
Content-Type: application/json

{
  "username": "hugues",
  "email": "hugueszeus@gmail.com",
  "first_name": "hugues",
  "last_name": "test",
  "password": "test1234"
}

### 7. login
POST http://localhost:8000/api/login/
Content-Type: application/json

{
  "username": "jeanDeDieu",
  "password": "test1234"
}


### Forgot password
POST http://localhost:8000/api/forgot-password/
Content-Type: application/json
Accept: application/json

{
  "email": "hugueszeus@gmail.com"
}

### Reset password
POST http://localhost:8000/api/reset-password/NjgxZGU0ZTktNjY3ZC00YmVlLThjYTItZTkwYTFiODVlMGNm/cvjx7m-6fb13c825439a204eae011cfeebc3ce7/
Content-Type: application/json
Accept: application/json

{
  "token": "cvjx7m-6fb13c825439a204eae011cfeebc3ce7",
  "new_password": "monNouveauMdp123"
}


### Requête HTTP pour SoilGrids
GET https://rest.soilgrids.org/query?lon=47.507&lat=-18.879
Accept: application/json

### Requête HTTP pour OpenWeatherMap
GET https://api.openweathermap.org/data/2.5/weather?lat=-18.879&lon=47.507&appid=TON_API_KEY&units=metric
Accept: application/json


### Requête HTTP pour Creer culture
POST http://localhost:8000/api/crops/
Content-Type: application/json

{
  "name": "Champ de riz",
  "variety_id": 1
}


### Requête HTTP pour lister culture
GET http://localhost:8000/api/crops/

### Requête HTTP pour Supprimer culture

DELETE http://localhost:8000/api/crops/<uuid>/

### Requête HTTP pour creer status Culture

POST http://localhost:8000/api/status-crops/
Content-Type: application/json

{
  "name": "Planted",
  "description": "Les cultures viennent d'être plantées"
}

### Requête HTTP pour creer varietes Culture

POST http://localhost:8000/api/varieties/
Content-Type: application/json

{
  "name": "Maïs hybride",
  "description": "Variété résistante à la sécheresse"
}

### Requête HTTP pour lier parcelles et Cultures

POST http://localhost:8000/api/parcel-crops/
Content-Type: application/json

{
  "parcel": "37b485ea-9368-47fe-9f0a-80857eac12a6",
  "crop_id": 1,
  "planting_date": "2025-01-15",
  "harvest_date": "2025-06-15",
  "area": 3.5,
  "status_id": 1
}

### Requête HTTP pour creer une taches

POST http://localhost:8000/api/tasks/
Content-Type: application/json

{
  "name": "Engrais champ A",
  "description": "Mettre de l'engrais dans  le champ de riz",
  "crop": 1,
  "due_date": "2025-09-11",
  "priority": 2,
  "status": 1
}
### LIST TASKS
GET http://localhost:8000/api/tasks
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c
Accept: application/json

### 2. CREATE TASK
POST http://localhost:8000/api/tasks/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c
Content-Type: application/json

{
  "name": "task du champ 1",
  "description": "task le champ de maïs",
  "crop": 1,
  "due_date": "2025-09-04",
  "priority": 1,
  "status": 1
}


### 3. GET SINGLE TASK
GET http://localhost:8000/api/tasks/1/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 4. UPDATE TASK
PUT http://localhost:8000/api/tasks/1/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c
Content-Type: application/json

{
  "name": "Arrosage champ 1 modifié",
  "description": "Changer la description",
  "due_date": "2025-09-06",
  "priority": 2,
  "status": 2
}


### 5. DELETE TASK
DELETE http://localhost:8000/api/tasks/1/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 6. MARK TASK AS DONE
POST http://localhost:8000/api/tasks/1/mark_done/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 7. UPCOMING TASKS
GET http://localhost:8000/api/tasks/upcoming/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 8. DASHBOARD SUMMARY
GET http://localhost:8000/api/tasks/dashboard/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 9. LIST PRIORITIES
GET http://localhost:8000/api/task-priority/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c


### 10. LIST STATUS
GET http://localhost:8000/api/task-status/
Authorization: Token 347be5de5501e526e9a14a279e18462463ee066c
